name: Build recovery

on:
  watch:
    types: [started]

  workflow_dispatch:
        
jobs:
  Build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Setup Configuration
      run: |
        echo "MANIFEST=$(cat config.env | grep "MANIFEST" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "MANIFEST_BRANCH=$(cat config.env | grep "MANIFEST_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "DEVICE_TREE=$(cat config.env | grep "DEVICE_TREE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "DEVICE_TREE_BRANCH=$(cat config.env | grep "DEVICE_TREE_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "DEVICE_PATH=$(cat config.env | grep "DEVICE_PATH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "MAKEFILE_NAME=$(cat config.env | grep "MAKEFILE_NAME" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "MAKEWHAT=$(cat config.env | grep "MAKEWHAT" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV

    - name: Remove Useless Package
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
        
    - name: Maximize Build Space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 1024
        swap-size-mb: 10240
        remove-dotnet: 'true'
        temp-reserve-mb: 1024
        remove-android: 'true'
        remove-haskell: 'true'

    - name: Prepare Environment
      run: |
        export HOME=${GITHUB_WORKSPACE}
        cd ${GITHUB_WORKSPACE}
        sudo apt -y install git aria2 
        git clone https://gitlab.com/OrangeFox/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
        sudo bash setup/install_android_sdk.sh || true
        echo "DEVICE_NAME=$(echo ${{ env.DEVICE_PATH }} | cut -d'/' -f3)" >> $GITHUB_ENV

    - name: Init Repo
      run: |
        mkdir ${GITHUB_WORKSPACE}/workspace
        cd ${GITHUB_WORKSPACE}/workspace
        git config --global user.name "Hikaru's Action-Build-Bot"
        git config --global user.email "Android@teio.tk"
        repo init --depth=1 -u ${{ env.MANIFEST }} -b ${{ env.MANIFEST_BRANCH }}
        
    - name: Repo Sync
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        repo sync -j4
  
    - name: Clone Device Tree
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        git clone ${{ env.DEVICE_TREE }} -b ${{ env.DEVICE_TREE_BRANCH }} ./${{ env.DEVICE_PATH }}
        
    - name: Building recovery
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        . build/envsetup.sh
        lunch ${{ env.MAKEFILE_NAME }}-eng
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        mka ${{ env.MAKEWHAT }}image -j2

    - name: Upload ${{ env.MAKEWHAT }} image
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.MAKEWHAT }}-${{ env.DEVICE_NAME }}-${{ env.BUILD_TIME }}
        path: workspace/out/target/product/${{ env.DEVICE_NAME }}/${{ env.MAKEWHAT }}.img
